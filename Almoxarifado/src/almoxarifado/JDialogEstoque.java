package almoxarifado;

import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;

class JDialogEstoque extends javax.swing.JDialog {
//Esta classe Swing é responsável pela TELA de Gerenciamento de Estoque.

    protected JDialogEstoque(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }

    private void init() {   //Init manualmente editado para melhor controle.
        setTitle("Gerenciador de Estoque");
        setVisible(true);
        setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonAddProduto = new javax.swing.JButton();
        jButtonRepoeProduto = new javax.swing.JButton();
        jButtonRemoveProduto = new javax.swing.JButton();
        jPanelPrintEstoque = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListEstoque = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocation(getLocation());
        setResizable(false);

        jButtonAddProduto.setText("Adicionar");
        jButtonAddProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddProdutoActionPerformed(evt);
            }
        });

        jButtonRepoeProduto.setText("Repor");
        jButtonRepoeProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRepoeProdutoActionPerformed(evt);
            }
        });

        jButtonRemoveProduto.setText("Remover");
        jButtonRemoveProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveProdutoActionPerformed(evt);
            }
        });

        jPanelPrintEstoque.setDebugGraphicsOptions(javax.swing.DebugGraphics.BUFFERED_OPTION);

        jListEstoque.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = almoxarifado.GerenciadorEstoque.estoqueArray();
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListEstoque.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListEstoque.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jListEstoque.setDoubleBuffered(true);
        jListEstoque.setDragEnabled(true);
        jScrollPane1.setViewportView(jListEstoque);

        javax.swing.GroupLayout jPanelPrintEstoqueLayout = new javax.swing.GroupLayout(jPanelPrintEstoque);
        jPanelPrintEstoque.setLayout(jPanelPrintEstoqueLayout);
        jPanelPrintEstoqueLayout.setHorizontalGroup(
            jPanelPrintEstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPrintEstoqueLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanelPrintEstoqueLayout.setVerticalGroup(
            jPanelPrintEstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanelPrintEstoque, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonAddProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(jButtonRepoeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonRemoveProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelPrintEstoque, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAddProduto)
                    .addComponent(jButtonRepoeProduto)
                    .addComponent(jButtonRemoveProduto))
                .addGap(0, 22, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleParent(null);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAddProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddProdutoActionPerformed

        JFormattedTextField nomeProduto = new JFormattedTextField();    //Instancia JFormattedTextFields para que possa ser aplicada a máscara.
        JFormattedTextField valorProduto = new JFormattedTextField();
        JFormattedTextField quantidadeProduto = new JFormattedTextField();

        DefinaMascaras(nomeProduto, valorProduto, quantidadeProduto);   //Segmenta a aplicação das mascaras.
        Object campos = GetCampos(nomeProduto, valorProduto, quantidadeProduto);    //Segmenta e define os campos para múltipla entrada de dados do Cadastro de Produto

        JOptionPane.showMessageDialog(null, campos, "Adicionar Produto ao Estoque", JOptionPane.PLAIN_MESSAGE);

        String nomeProdutoString = nomeProduto.getText().replace(" ", "");  //Apaga os espaços para não dar erro na conversão.
        String valorProdutoString = valorProduto.getText().replace(" ", "");
        String quantidadeProdutoString = quantidadeProduto.getText().replace(" ", "");

        verificaSeVazio(nomeProdutoString, valorProdutoString, quantidadeProdutoString); //verifica se vazio e finaliza caso não for.


    }//GEN-LAST:event_jButtonAddProdutoActionPerformed

    private void jButtonRemoveProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveProdutoActionPerformed
        if (jListEstoque.getSelectedIndex() > -1) {
            GerenciadorEstoque.removeProduto(jListEstoque.getSelectedIndex());
            refazLista();
        }
    }//GEN-LAST:event_jButtonRemoveProdutoActionPerformed

    private void jButtonRepoeProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRepoeProdutoActionPerformed

        JFormattedTextField quantidadeProduto = new JFormattedTextField();
        UtilMascaras.maskOnlyInt(quantidadeProduto);

        JOptionPane.showMessageDialog(null, quantidadeProduto, "Insira a nova Quantidade do Produto:", JOptionPane.PLAIN_MESSAGE);
        String quantidadeProdutoString = quantidadeProduto.getText().replace(" ", "");

        if (quantidadeProdutoString != null && jListEstoque.getSelectedIndex() > -1) {
            int novaQuantEstoque = Integer.parseInt(quantidadeProdutoString);
            GerenciadorEstoque.repoeProduto(GerenciadorEstoque.estoque.get(jListEstoque.getSelectedIndex()), novaQuantEstoque);
            refazLista();
        }
    }//GEN-LAST:event_jButtonRepoeProdutoActionPerformed

    /**
     * @param args the command line argumentst
     */
    private static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                JDialogEstoque dialog = new JDialogEstoque(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private void DefinaMascaras(JFormattedTextField nomeProduto, JFormattedTextField valorProduto, JFormattedTextField quantidadeProduto) {
        UtilMascaras.maskOnlyString(nomeProduto);
        UtilMascaras.maskOnlyInt(quantidadeProduto);
        UtilMascaras.maskOnlyDouble(valorProduto);
    }

    private Object[] GetCampos(JFormattedTextField nomeProduto, JFormattedTextField valorProduto, JFormattedTextField quantidadeProduto) {
        Object[] campos = {
            "Nome do Produto", nomeProduto,
            "Valor do Produto", valorProduto,
            "Quantidade do Produto", quantidadeProduto
        };

        return campos;
    }

    private void refazLista() { //Refaz lista da tela para atualização dos dados.

        jListEstoque.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = GerenciadorEstoque.estoqueArray();

            @Override
            public int getSize() {
                return strings.length;
            }

            @Override
            public String getElementAt(int i) {
                return strings[i];
            }
        });

        jScrollPane1.setViewportView(jListEstoque);

    }

    private void verificaSeVazio(String nomeProdutoString, String valorProdutoString, String quantidadeProdutoString) {   //Verifica se vazio para dar continuidade ou não.
        if (!nomeProdutoString.isEmpty() && !valorProdutoString.isEmpty() && !quantidadeProdutoString.isEmpty()) {

            int quantidadeProdutoInt = Integer.parseInt(quantidadeProdutoString);
            try {
                double valorProdutoDouble = Double.parseDouble(valorProdutoString);
                GerenciadorEstoque.cadastrarProduto(nomeProdutoString, valorProdutoDouble, quantidadeProdutoInt);

                refazLista();

            } catch (java.lang.NumberFormatException e) {
                System.out.print("Erro na conversão, inserido mais de um ponto.");
                JOptionPane.showMessageDialog(null, "Insira um valor de produto válido.");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Por favor, preencha todos os campos");
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddProduto;
    private javax.swing.JButton jButtonRemoveProduto;
    private javax.swing.JButton jButtonRepoeProduto;
    private javax.swing.JList<String> jListEstoque;
    private javax.swing.JPanel jPanelPrintEstoque;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
